{
  "address": "0x226148DfBfC8e0FD2d6E880aAbA38D7A4B43e1B7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAggressToAmountFundede",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getpriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x62f4310e3c832ab163dbe9bd7530abb4c4d92f237a5e458102509cf9255858d6",
  "receipt": {
    "to": null,
    "from": "0xA9Cd0AE3d45510B33525584177B93B9F63B4307c",
    "contractAddress": "0x226148DfBfC8e0FD2d6E880aAbA38D7A4B43e1B7",
    "transactionIndex": 10,
    "gasUsed": "983810",
    "logsBloom": "0x
    "blockHash": "0x849cc2236658dbc461d83cda17fb95a3d802960fbfd1ea541e8200bbe04f67b3",
    "transactionHash": "0x62f4310e3c832ab163dbe9bd7530abb4c4d92f237a5e458102509cf9255858d6",
    "logs": [],
    "blockNumber": 3605680,
    "cumulativeGasUsed": "1754135",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 3,
  "solcInputHash": "7038b6a3bd827b426a1f54ef93a3b251",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAggressToAmountFundede\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getpriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 10 * 10 ** 18;\\n    AggregatorV3Interface public priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    function getpriceFeed() public view returns( AggregatorV3Interface){\\n        return priceFeed;\\n\\n    }\\n    function getFunder(uint256 index) public view returns(address){\\n        return funders[index];\\n\\n    }\\n    function getAggressToAmountFundede(address fundingAddress) public view returns(uint256){\\n        return addressToAmountFunded[fundingAddress];\\n\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0x647ac0b2956fba5f992e7c021dbe9d3a30d47e4c7126a7af0dab5ab999a2e833\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xb1dcab58942d7ce18002625cabdbce4dbbb26c1220396cc416f5b41ff1187710\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200116c3803806200116c83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611000806200016c6000396000f3fe6080604052600436106100945760003560e01c8063b60d428811610059578063b60d428814610182578063d7b4750c1461018c578063dba6335f146101c9578063dc0d3dff146101f4578063eaa8bacb14610231576100a3565b80629196d7146100ad5780633ccfd60b146100d85780633e47d6f3146100ef5780636b69a5921461012c578063741bef1a14610157576100a3565b366100a3576100a161026e565b005b6100ab61026e565b005b3480156100b957600080fd5b506100c26103a7565b6040516100cf9190610954565b60405180910390f35b3480156100e457600080fd5b506100ed6103d1565b005b3480156100fb57600080fd5b50610116600480360381019061011191906109b2565b610613565b60405161012391906109f8565b60405180910390f35b34801561013857600080fd5b5061014161062b565b60405161014e91906109f8565b60405180910390f35b34801561016357600080fd5b5061016c610637565b6040516101799190610954565b60405180910390f35b61018a61026e565b005b34801561019857600080fd5b506101b360048036038101906101ae9190610a3f565b61065d565b6040516101c09190610a7b565b60405180910390f35b3480156101d557600080fd5b506101de6106a5565b6040516101eb9190610a7b565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190610a3f565b6106cb565b6040516102289190610a7b565b60405180910390f35b34801561023d57600080fd5b50610258600480360381019061025391906109b2565b61070a565b60405161026591906109f8565b60405180910390f35b678ac7230489e800006102ac600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461075290919063ffffffff16565b10156102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e490610af3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461033b9190610b42565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610458576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105035760006001828154811061047e5761047d610b98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104fb90610bc7565b91505061045b565b50600067ffffffffffffffff81111561051f5761051e610c10565b5b60405190808252806020026020018201604052801561054d5781602001602082028036833780820191505090505b506001908051906020019061056392919061082e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058a90610c70565b60006040518083038185875af1925050503d80600081146105c7576040519150601f19603f3d011682016040523d82523d6000602084013e6105cc565b606091505b5050905080610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610cd1565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b678ac7230489e8000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001828154811061067357610672610b98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106106db57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008061075e8361078e565b90506000670de0b6b3a764000085836107779190610cf1565b6107819190610d7a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107d757600080fd5b505afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190610e38565b5050509150506402540be400816108269190610eb3565b915050919050565b8280548282559060005260206000209081019282156108a7579160200282015b828111156108a65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061084e565b5b5090506108b491906108b8565b5090565b5b808211156108d15760008160009055506001016108b9565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061091a610915610910846108d5565b6108f5565b6108d5565b9050919050565b600061092c826108ff565b9050919050565b600061093e82610921565b9050919050565b61094e81610933565b82525050565b60006020820190506109696000830184610945565b92915050565b600080fd5b600061097f826108d5565b9050919050565b61098f81610974565b811461099a57600080fd5b50565b6000813590506109ac81610986565b92915050565b6000602082840312156109c8576109c761096f565b5b60006109d68482850161099d565b91505092915050565b6000819050919050565b6109f2816109df565b82525050565b6000602082019050610a0d60008301846109e9565b92915050565b610a1c816109df565b8114610a2757600080fd5b50565b600081359050610a3981610a13565b92915050565b600060208284031215610a5557610a5461096f565b5b6000610a6384828501610a2a565b91505092915050565b610a7581610974565b82525050565b6000602082019050610a906000830184610a6c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610add601b83610a96565b9150610ae882610aa7565b602082019050919050565b60006020820190508181036000830152610b0c81610ad0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b4d826109df565b9150610b58836109df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b8d57610b8c610b13565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bd2826109df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0557610c04610b13565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c5a600083610c3f565b9150610c6582610c4a565b600082019050919050565b6000610c7b82610c4d565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cbb600b83610a96565b9150610cc682610c85565b602082019050919050565b60006020820190508181036000830152610cea81610cae565b9050919050565b6000610cfc826109df565b9150610d07836109df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d4057610d3f610b13565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d85826109df565b9150610d90836109df565b925082610da057610d9f610d4b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610dca81610dab565b8114610dd557600080fd5b50565b600081519050610de781610dc1565b92915050565b6000819050919050565b610e0081610ded565b8114610e0b57600080fd5b50565b600081519050610e1d81610df7565b92915050565b600081519050610e3281610a13565b92915050565b600080600080600060a08688031215610e5457610e5361096f565b5b6000610e6288828901610dd8565b9550506020610e7388828901610e0e565b9450506040610e8488828901610e23565b9350506060610e9588828901610e23565b9250506080610ea688828901610dd8565b9150509295509295909350565b6000610ebe82610ded565b9150610ec983610ded565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f0857610f07610b13565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f4557610f44610b13565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f8257610f81610b13565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fbf57610fbe610b13565b5b82820290509291505056fea264697066735822122010dde19b3338866caefe81013b92c4b73d9d6354d16b101a4d362614555d375c64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100945760003560e01c8063b60d428811610059578063b60d428814610182578063d7b4750c1461018c578063dba6335f146101c9578063dc0d3dff146101f4578063eaa8bacb14610231576100a3565b80629196d7146100ad5780633ccfd60b146100d85780633e47d6f3146100ef5780636b69a5921461012c578063741bef1a14610157576100a3565b366100a3576100a161026e565b005b6100ab61026e565b005b3480156100b957600080fd5b506100c26103a7565b6040516100cf9190610954565b60405180910390f35b3480156100e457600080fd5b506100ed6103d1565b005b3480156100fb57600080fd5b50610116600480360381019061011191906109b2565b610613565b60405161012391906109f8565b60405180910390f35b34801561013857600080fd5b5061014161062b565b60405161014e91906109f8565b60405180910390f35b34801561016357600080fd5b5061016c610637565b6040516101799190610954565b60405180910390f35b61018a61026e565b005b34801561019857600080fd5b506101b360048036038101906101ae9190610a3f565b61065d565b6040516101c09190610a7b565b60405180910390f35b3480156101d557600080fd5b506101de6106a5565b6040516101eb9190610a7b565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190610a3f565b6106cb565b6040516102289190610a7b565b60405180910390f35b34801561023d57600080fd5b50610258600480360381019061025391906109b2565b61070a565b60405161026591906109f8565b60405180910390f35b678ac7230489e800006102ac600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461075290919063ffffffff16565b10156102ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e490610af3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461033b9190610b42565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610458576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105035760006001828154811061047e5761047d610b98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104fb90610bc7565b91505061045b565b50600067ffffffffffffffff81111561051f5761051e610c10565b5b60405190808252806020026020018201604052801561054d5781602001602082028036833780820191505090505b506001908051906020019061056392919061082e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161058a90610c70565b60006040518083038185875af1925050503d80600081146105c7576040519150601f19603f3d011682016040523d82523d6000602084013e6105cc565b606091505b5050905080610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790610cd1565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b678ac7230489e8000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001828154811061067357610672610b98565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106106db57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008061075e8361078e565b90506000670de0b6b3a764000085836107779190610cf1565b6107819190610d7a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107d757600080fd5b505afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190610e38565b5050509150506402540be400816108269190610eb3565b915050919050565b8280548282559060005260206000209081019282156108a7579160200282015b828111156108a65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061084e565b5b5090506108b491906108b8565b5090565b5b808211156108d15760008160009055506001016108b9565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061091a610915610910846108d5565b6108f5565b6108d5565b9050919050565b600061092c826108ff565b9050919050565b600061093e82610921565b9050919050565b61094e81610933565b82525050565b60006020820190506109696000830184610945565b92915050565b600080fd5b600061097f826108d5565b9050919050565b61098f81610974565b811461099a57600080fd5b50565b6000813590506109ac81610986565b92915050565b6000602082840312156109c8576109c761096f565b5b60006109d68482850161099d565b91505092915050565b6000819050919050565b6109f2816109df565b82525050565b6000602082019050610a0d60008301846109e9565b92915050565b610a1c816109df565b8114610a2757600080fd5b50565b600081359050610a3981610a13565b92915050565b600060208284031215610a5557610a5461096f565b5b6000610a6384828501610a2a565b91505092915050565b610a7581610974565b82525050565b6000602082019050610a906000830184610a6c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610add601b83610a96565b9150610ae882610aa7565b602082019050919050565b60006020820190508181036000830152610b0c81610ad0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b4d826109df565b9150610b58836109df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b8d57610b8c610b13565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bd2826109df565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0557610c04610b13565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c5a600083610c3f565b9150610c6582610c4a565b600082019050919050565b6000610c7b82610c4d565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cbb600b83610a96565b9150610cc682610c85565b602082019050919050565b60006020820190508181036000830152610cea81610cae565b9050919050565b6000610cfc826109df565b9150610d07836109df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d4057610d3f610b13565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d85826109df565b9150610d90836109df565b925082610da057610d9f610d4b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610dca81610dab565b8114610dd557600080fd5b50565b600081519050610de781610dc1565b92915050565b6000819050919050565b610e0081610ded565b8114610e0b57600080fd5b50565b600081519050610e1d81610df7565b92915050565b600081519050610e3281610a13565b92915050565b600080600080600060a08688031215610e5457610e5361096f565b5b6000610e6288828901610dd8565b9550506020610e7388828901610e0e565b9450506040610e8488828901610e23565b9350506060610e9588828901610e23565b9250506080610ea688828901610dd8565b9150509295509295909350565b6000610ebe82610ded565b9150610ec983610ded565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f0857610f07610b13565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f4557610f44610b13565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f8257610f81610b13565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fbf57610fbe610b13565b5b82820290509291505056fea264697066735822122010dde19b3338866caefe81013b92c4b73d9d6354d16b101a4d362614555d375c64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}